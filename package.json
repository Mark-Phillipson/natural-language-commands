{
  "name": "natural-language-commands",
  "publisher": "marcusvoicecoder",
  "displayName": "Natural Language Commands",
  "description": " receive natural language commands and perform a Visual Studio code command that matches",
  "icon": "natural-language-commands.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/Mark-Phillipson/natural-language-commands.git"
  },
  "version": "0.13.1",
  "engines": {
    "vscode": "^1.54.0"
  },
  "categories": [
    "Chat",
    "Other"
  ],
  "keywords": [
    "accessibility",
    "productivity"
  ],
  "activationEvents": [
    "onCommand:natural-language-commands.run",
    "onCommand:natural-language-commands.new",
    "onCommand:nlc.termMenu"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "commandHistoryContainer",
          "title": "Natural Language Commands",
          "icon": "nlc-history.svg"
        }
      ]
    },
    "views": {
      "commandHistoryContainer": [
        {
          "id": "nlcChatView",
          "name": "Chat",
          "icon": "natural-language-commands.png",
          "type": "webview"
        },
        {
          "id": "commandHistoryView",
          "name": "Command History",
          "icon": "natural-language-commands.png"
        }
      ]
    },
    "commands": [
      {
        "command": "natural-language-commands.run",
        "title": "Run Command...",
        "category": "NLC"
      },
      {
        "command": "natural-language-commands.new",
        "title": "New Command",
        "category": "NLC"
      },
      {
        "command": "nlc.searchFiles",
        "title": "Search Files (Natural Language)",
        "category": "NLC"
      },
      {
        "command": "commandHistory.clearHistory",
        "title": "Clear History",
        "category": "NLC"
      },
      {
        "command": "commandHistory.reRunCommand",
        "title": "Re-run from History",
        "category": "NLC"
      },
      {
        "command": "natural-language-commands.debugMenu",
        "title": "Debugging Commands",
        "category": "NLC"
      },
      {
        "command": "natural-language-commands.setApiKey",
        "title": "Set OpenAI API Key",
        "category": "NLC"
      },
      {
        "command": "natural-language-commands.removeApiKey",
        "title": "Remove OpenAI API Key",
        "category": "NLC"
      },
      {
        "command": "commandHistory.deleteItem",
        "title": "Delete from History",
        "category": "NLC"
      },
      {
        "command": "nlc.fileMenu",
        "title": "File Menu",
        "category": "NLC"
      },
      {
        "command": "nlc.termMenu",
        "title": "Terminal Menu",
        "category": "NLC"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "commandHistory.clearHistory",
          "when": "view == commandHistoryView",
          "group": "navigation",
          "icon": {
            "light": "clear.svg",
            "dark": "clear.svg"
          }
        }
      ],
      "view/item/context": [
        {
          "command": "commandHistory.reRunCommand",
          "when": "view == commandHistoryView && viewItem == commandHistoryItem"
        },
        {
          "command": "commandHistory.deleteItem",
          "when": "view == commandHistoryView && viewItem == commandHistoryItem"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "NLC Settings",
      "properties": {
        "naturalLanguageCommands.model": {
          "type": "string",
          "default": "gpt-4o",
          "description": "OpenAI model to use for natural language commands (e.g., gpt-4o, gpt-4.1, o3-pro, gpt-3.5-turbo)."
        },
        "naturalLanguageCommands.debugShowRawResponse": {
          "type": "boolean",
          "default": false,
          "description": "Show the raw LLM response in the UI (for debugging only)."
        },
        "naturalLanguageCommands.confidenceThresholds": {
          "type": "object",
          "default": {
            "autoAccept": 0.9,
            "confirm": 0.7
          },
          "properties": {
            "autoAccept": {
              "type": "number",
              "default": 0.9,
              "minimum": 0,
              "maximum": 1,
              "description": "If LLM confidence is above this value, commands are auto-accepted and executed without confirmation. (0-1, default 0.9)"
            },
            "confirm": {
              "type": "number",
              "default": 0.7,
              "minimum": 0,
              "maximum": 1,
              "description": "If LLM confidence is between this value and autoAccept, ask for confirmation. Below this, show alternatives. (0-1, default 0.7)"
            }
          },
          "description": "Controls the confidence thresholds for auto-accepting, confirming, or showing alternatives for commands. Set autoAccept to 1 to always ask for confirmation; set to 0 to always auto-accept."
        },
        "naturalLanguageCommands.alwaysConfirmTerminalCommands": {
          "type": "boolean",
          "default": true,
          "description": "When enabled, always ask for confirmation before executing terminal commands, regardless of confidence level. This provides an extra layer of security to prevent accidental execution of potentially destructive commands. Certain dangerous commands (like rm, del, format) will always require confirmation even if this setting is disabled."
        }
      }
    }
  },
  "keybindings": [
    {
      "command": "commandHistory.deleteItem",
      "key": "delete",
      "when": "view == commandHistoryView && viewItem == commandHistoryItem && focus"
    }
  ],
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc --watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/dotenv": "^8.2.3",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/sinon": "^17.0.4",
    "@types/vscode": "^1.54.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "eslint": "^9.25.1",
    "sinon": "^21.0.0",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "dotenv": "^17.2.3",
    "openai": "^6.2.0"
  }
}
